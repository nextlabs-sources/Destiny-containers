version: "3"
services:
  dbinit:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/dbinit:latest
    networks:
    - ccnet
    environment:
    - DATABASE_USERNAME=${DATABASE_USERNAME}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    - DATABASE_CONNECTSTRING=${DATABASE_CONNECTSTRING}
    - ADMINISTRATOR_PASSWORD=${ADMINISTRATOR_PASSWORD}
    command: [dbinit, install]
  certificate_generator:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/certificate_generator:latest
    networks:
    - ccnet
    environment:
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    volumes:
    - certificates-volume:/output
  dms:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/dms:latest
    container_name: dms
    hostname: dms
    networks:
    - ccnet
    environment:
    - DATABASE_USERNAME=${DATABASE_USERNAME}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    - DATABASE_CONNECTSTRING=${DATABASE_CONNECTSTRING}
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    volumes:
    - certificates-volume:/opt/policyserver/certificates
  dps:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/dps:latest
    container_name: dps
    hostname: dps
    networks:
    - ccnet
    environment:
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    - DMS_HOST=dms
    volumes:
    - certificates-volume:/opt/policyserver/certificates
  dac:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/dac:latest
    container_name: dac
    hostname: dac
    networks: 
    - ccnet
    environment: 
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    - DMS_HOST=dms
    volumes:
    - certificates-volume:/opt/policyserver/certificates
  dabs:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/dabs:latest
    container_name: dabs
    hostname: dabs
    networks:
    - ccnet
    ports: 
    - "8443:8443"
    environment: 
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    - DMS_HOST=dms
    - EXTERNAL_DABS_HOST=${EXTERNAL_DABS_HOST}
    volumes:
    - certificates-volume:/opt/policyserver/certificates
  cas:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/cas:latest
    container_name: cas
    hostname: cas
    networks: 
    - ccnet
    environment: 
    - CAS_SERVER_NAME=cas
    - DATABASE_USERNAME=${DATABASE_USERNAME}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    - DATABASE_CONNECTSTRING=${DATABASE_CONNECTSTRING}
  reporter:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/inquirycenter:latest
    container_name: reporter
    hostname: reporter
    networks:
    - ccnet
    environment:
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    - DMS_HOST=dms
    - DAC_HOST=dac
    - CAS_AUTHENTICATION_SERVER_NAME=${EXTERNAL_SERVER_NAME}
    - CAS_TICKET_VALIDATION_SERVER_NAME=http://cas:8080
    - CAS_CLIENT_SERVER_NAME=${EXTERNAL_SERVER_NAME}
    volumes:
    - certificates-volume:/opt/policyserver/certificates
  administrator:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/mgmtconsole:latest
    container_name: administrator
    hostname: administrator
    networks:
    - ccnet
    environment:
    - SSL_PASSPHRASE=${SSL_PASSPHRASE}
    - DMS_HOST=dms
    - CAS_AUTHENTICATION_SERVER_NAME=${EXTERNAL_SERVER_NAME}
    - CAS_TICKET_VALIDATION_SERVER_NAME=http://cas:8080
    - CAS_CLIENT_SERVER_NAME=${EXTERNAL_SERVER_NAME}
    volumes:
    - certificates-volume:/opt/policyserver/certificates
  es:
    image: elasticsearch:1.7-alpine
    container_name: es
    hostname: es
    networks: 
    - ccnet
  console:
    image: 579292207088.dkr.ecr.us-west-2.amazonaws.com/platform/console:latest
    container_name: console
    hostname: console
    depends_on:
    - es
    networks:
    - ccnet
    environment:
    - DATABASE_USERNAME=${DATABASE_USERNAME}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    - DATABASE_CONNECTSTRING=${DATABASE_CONNECTSTRING}
    - ES_CLUSTER_NAME=elasticsearch
    - ES_HOST=es
    - CAS_AUTHENTICATION_SERVER_NAME=${EXTERNAL_SERVER_NAME}
    - CAS_TICKET_VALIDATION_SERVER_NAME=http://cas:8080
    - CAS_CLIENT_SERVER_NAME=${EXTERNAL_SERVER_NAME}
  proxy:
    image: nginx
    container_name: proxy
    networks: 
    - ccnet
    ports:
    - "80:80"
    - "443:443"
    volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf
    - ./cert.crt:/etc/nginx/cert.crt
    - ./cert.key:/etc/nginx/cert.key
networks:
  ccnet:
volumes:
  certificates-volume: