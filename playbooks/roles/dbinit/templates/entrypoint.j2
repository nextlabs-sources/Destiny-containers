#!/bin/bash
set -e

if [ "$1" = 'dbinit' ]; then
  if [ -z "$DATABASE_CONNECTSTRING" ]; then
    echo "DATABASE_CONNECTSTRING env is not set, exit"
    exit 1
  else
    if [[ "$DATABASE_CONNECTSTRING" == sqlserver* ]]; then
      DATABASE_DRIVER=com.microsoft.sqlserver.jdbc.SQLServerDriver
      DATABASE_DIALECT=com.bluejungle.framework.datastore.hibernate.dialect.SqlServer2000Dialect
    elif [[ "$DATABASE_CONNECTSTRING" == oracle* ]]; then
      DATABASE_DRIVER=oracle.jdbc.driver.OracleDriver
      DATABASE_DIALECT=net.sf.hibernate.dialect.Oracle9Dialect
    elif [[ "$DATABASE_CONNECTSTRING" == postgresql* ]]; then
      DATABASE_DRIVER=org.postgresql.Driver
      DATABASE_DIALECT=net.sf.hibernate.dialect.PostgreSQLDialect
    else
      echo "Connection string not valid: " $DATABASE_CONNECTSTRING
      exit 1
    fi
  fi

  if [ -z "$DATABASE_USERNAME" ] \
    || [ -z "$DATABASE_PASSWORD" ]
  then
    echo "One of env of DATABASE_USERNAME, DATABASE_PASSWORD is not set, exit"
    exit 1
  fi
  # encrypt the password
  DATABASE_ENCRYPTED_PASSWORD=`java -jar "{{ install_home }}/tools/crypt/crypt.jar" -w $DATABASE_PASSWORD`

  # generate configuration.xml
  sed -e "s/\[MGMT_DATABASE_DIALECT\]/$DATABASE_DIALECT/g" \
    -e "s/\[PF_DATABASE_DIALECT\]/$DATABASE_DIALECT/g" \
    -e "s/\[ACTIVITY_DATABASE_DIALECT\]/$DATABASE_DIALECT/g" \
    -e "s/\[DICT_DATABASE_DIALECT\]/$DATABASE_DIALECT/g" \
    -e "s/\[MGMT_DATABASE_USERNAME\]/$DATABASE_USERNAME/g" \
    -e "s/\[PF_DATABASE_USERNAME\]/$DATABASE_USERNAME/g" \
    -e "s/\[ACTIVITY_DATABASE_USERNAME\]/$DATABASE_USERNAME/g" \
    -e "s/\[DICT_DATABASE_USERNAME\]/$DATABASE_USERNAME/g" \
    -e "s/\[MGMT_DATABASE_PASSWORD\]/$DATABASE_ENCRYPTED_PASSWORD/g" \
    -e "s/\[PF_DATABASE_PASSWORD\]/$DATABASE_ENCRYPTED_PASSWORD/g" \
    -e "s/\[ACTIVITY_DATABASE_PASSWORD\]/$DATABASE_ENCRYPTED_PASSWORD/g" \
    -e "s/\[DICT_DATABASE_PASSWORD\]/$DATABASE_ENCRYPTED_PASSWORD/g" \
    -e "s|\[MGMT_DATABASE_CONNECTSTRING\]|jdbc:$DATABASE_CONNECTSTRING|g" \
    -e "s|\[PF_DATABASE_CONNECTSTRING\]|jdbc:$DATABASE_CONNECTSTRING|g" \
    -e "s|\[ACTIVITY_DATABASE_CONNECTSTRING\]|jdbc:$DATABASE_CONNECTSTRING|g" \
    -e "s|\[DICT_DATABASE_CONNECTSTRING\]|jdbc:$DATABASE_CONNECTSTRING|g" \
    -e "s/\[MGMT_DATABASE_DRIVER\]/$DATABASE_DRIVER/g" \
    -e "s/\[PF_DATABASE_DRIVER\]/$DATABASE_DRIVER/g" \
    -e "s/\[ACTIVITY_DATABASE_DRIVER\]/$DATABASE_DRIVER/g" \
    -e "s/\[DICT_DATABASE_DRIVER\]/$DATABASE_DRIVER/g" \
    "{{ install_home }}/server/configuration/configuration-template.xml" > "{{ install_home }}/server/configuration/configuration.xml"

  cp "{{ install_home }}/tools/dbInit/dictionary/dictionary_template.cfg" "{{ install_home }}/tools/dbInit/dictionary/dictionary.cfg"
  sed -e 's|\[BLUEJUNGLE_HOME\]|{{ install_home }}/tools/dbInit/pf|g' \
    "{{ install_home }}/tools/dbInit/pf/pf_template.cfg" > "{{ install_home }}/tools/dbInit/pf/pf.cfg"
  cp "{{ install_home }}/tools/dbInit/mgmt/mgmt_template.cfg" "{{ install_home }}/tools/dbInit/mgmt/mgmt.cfg"

  shift

  if [ "$1" == 'install' ]; then
    echo "DBinit action: " $1
    shift
    # Only set ADMINISTRATOR_PASSWORD if not already set
    if [ -z "$ADMINISTRATOR_PASSWORD" ]; then
      echo "Set ADMINISTRATOR_PASSWORD value as password"
      ADMINISTRATOR_PASSWORD=password
    fi
    sed -e "s/\[ADMINISTRATOR_PASSWORD\]/$ADMINISTRATOR_PASSWORD/g" -i "{{ install_home }}/tools/dbInit/mgmt/mgmt.cfg"
    
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -install -config {{ install_home }}/tools/dbInit/dictionary/dictionary.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/dictionary $@ 2>&1
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -install -config {{ install_home }}/tools/dbInit/mgmt/mgmt.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/mgmt $@ 2>&1
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -install -config {{ install_home }}/tools/dbInit/pf/pf.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/pf $@ 2>&1
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -install -config {{ install_home }}/tools/dbInit/activity/activity.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/activity $@ 2>&1
  elif [ "$1" == 'upgrade' ]; then
    echo "DBinit action: " $1
    shift
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -upgrade -config {{ install_home }}/tools/dbInit/dictionary/dictionary.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/dictionary $@ 2>&1
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -upgrade -config {{ install_home }}/tools/dbInit/mgmt/mgmt.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/mgmt $@ 2>&1
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -upgrade -config {{ install_home }}/tools/dbInit/pf/pf.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/pf $@ 2>&1
    java -jar -Djava.util.logging.config.file={{ install_home }}/tools/dbInit/dbinit_logging.properties \
      {{ install_home }}/tools/dbInit/db-init.jar -upgrade -config {{ install_home }}/tools/dbInit/activity/activity.cfg \
      -connection {{ install_home }} -libraryPath {{ install_home }}/tools/dbInit/activity $@ 2>&1
  elif [ "$1" == 'help' ]; then
    shift
    java -jar {{ install_home }}/tools/dbInit/db-init.jar -h
  else
    shift
    echo "Unsupported action: " $1
  fi
else
  exec "$@"
fi
